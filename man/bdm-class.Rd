% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/bdm-class.R, R/bdm.R
\docType{class}
\name{bdm-class}
\alias{bdm}
\alias{bdm-class}
\title{Class definition for \code{bdm} object}
\usage{
bdm(path, model.code, model.name = "", ...)
}
\description{
This is the primary object class for the \pkg{bdm} package, containting all the information necessary to fit the model. It inherits from the \code{rstan::stanmodel} class and therefore includes the \code{stan} model code and compiled DSO.
}
\section{Slots}{

\describe{
\item{\code{data}}{a \code{list} of input data}

\item{\code{init.func}}{Object of class \code{function} which must return initial values of \eqn{r}, \eqn{ln(K)} and depletion \eqn{x} for each chain. Default function uses \code{\link{getr}}, \code{\link{getlogK}} and \code{\link{getx}} to get values for \eqn{r}, \eqn{logK} and depletion \eqn{x}, then initialises each chain with a small degree of variation around these points.}

\item{\code{init.values}}{List of initial values populated by \code{init.func}.}

\item{\code{chains}}{The number of chains. Defaults to \code{chains = 4}.}

\item{\code{iter}}{The number of samples for each chain. Defaults to \code{iter = 2000}.}

\item{\code{warmup}}{The 'burnin' period for each chain. Defaults to \code{warmup = floor(iter/2/thin)}.}

\item{\code{thin}}{The period of sampling from each chain. Defaults to \code{thin = 1}.}

\item{\code{nsamples}}{The resultant number of samples retained from the sample run. Equal to \code{((iter-warmup)*chains)/thin}.}

\item{\code{trace}}{\code{list} holding the processed samples from \code{\link[rstan:extract]{extract(..., permuted = TRUE, inc_warmup = FALSE)}}.}

\item{\code{trace_array}}{\code{array} holding the processed samples from \code{\link[rstan:extract]{extract(..., permuted = FALSE, inc_warmup = TRUE)}}. This should rarely be needed for direct access but is used for diagnostic plots.}

\item{\code{mpd}}{List containing output from maximum posterior density fit using \code{\link[rstan:sampling]{optimizing}}.}

\item{\code{path}}{Optional path to stan model text file for initialisation of non-default model. This is analagous to the \code{file} argument in \code{\link[rstan:stan_model]{stan_model}}.}

\item{\code{run}}{\code{character} string containing an optional label for this particular run.}

\item{\code{default_model}}{\code{logical} value indicating whether the default model is retained in this particular intialisation. This specifically disables functions that are designed to work only on the default model.}

\item{\code{model_name}}{\code{character} string giving the model name.}

\item{\code{model_code}}{the model code in the Stan modelling language.}

\item{\code{model_cpp}}{translation of Stan code into C++.}

\item{\code{dso}}{Object of class \code{cxxdso} holding the compiled C++ code as a dynamic shared object.}
}}
\examples{
# initialise default model object
mdl <- bdm()

# inspect Stan model code
mdl
}
\seealso{
See the \href{https://github.com/stan-dev/rstan/wiki/RStan-Getting-Started}{RStan Quick Start Guide} to ensure that \code{\link{rstan}} is installed correctly before compilation. See \code{\link[rstan]{stanmodel}} for details of the superclass. See \code{\link[rstan:sampling]{sampling}} for further details on \code{chains}, \code{iter}, \code{warmup} and \code{thin}.
}

