% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shape.R
\name{shape}
\alias{shape}
\alias{shape,bdmData-method}
\alias{shape<-}
\alias{shape<-,bdmData,numeric-method}
\title{Access or assign shape of the production function}
\usage{
shape(object, ...)

\S4method{shape}{bdmData}(object, par = "phi")

shape(object, ...) <- value

\S4method{shape}{bdmData,numeric}(object) <- value
}
\arguments{
\item{object}{a \code{bdmData} class object}

\item{...}{additional arguments to the generic function}

\item{par}{a character string of either \code{n} or \code{phi}}

\item{value}{a numeric value specifying the value of either \code{n} or \code{phi}}
}
\description{
This function can used to access or assign the shape of the generalised production function. The shape is assumed to be fixed on input and is therefore contained within the \code{bdmData} object class as the parameter \eqn{n}.
}
\details{
The \pkg{bdm} package assumes by default a generalised Fletcher-Schaefer hybrid production function. The inflection points occurs at: \deqn{\phi = B_{MSY}/K = (1/n)^(1/(n-1)).} 

The discontinuity in the relationship between \eqn{phi} and \eqn{n} is accommodated by assuming \eqn{\phi = 1/e} at \eqn{n = 1}.
}
\examples{
# initialize bdmData object
dat <- bdmData(harvest = 20:30, index = runif(11))

# access default shape
shape(dat, 'phi')
shape(dat, 'n')

# assign shape
shape(dat) <- 0.4
shape(dat)
shape(dat, 'n')

}
