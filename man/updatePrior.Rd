% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/updatePrior.R
\name{updatePrior}
\alias{updatePrior}
\alias{updatePrior.bdm}
\title{Update priors in \code{bdm} model}
\usage{
updatePrior(object, ...)

\method{updatePrior}{bdm}(object, prior, ...)
}
\arguments{
\item{object}{a \code{bdm} class object}

\item{...}{additional arguments to generic function}

\item{prior}{a \code{prior} class object or a \code{list} object containing information to update the prior}
}
\value{
Returns a \code{bdm} object with updated model code.
}
\description{
This function can be used to update the priors for \eqn{r} and \eqn{ln(K)}.
}
\details{
The \pkg{bdm} package by default assumes that the prior on \eqn{r} is log-normal and the prior for \eqn{ln(K)} is uniform. If the function is supplied with a \code{\link[package:lhm]{prior}} class object then it will extract the log-normal distribution parameters for \eqn{r} and use regular expression matching to update the model code. If the function is provided with a named list then it can be used to update the priors for \eqn{r}, \eqn{ln(K)} or the initial depletion \eqn{x0}, in a similar manner. See the examples for how the list arguments are specified.

By default this function only updates the model code. The model will need to be re-compiled before it is run for the changes to take effect.
}
\examples{
# initialise default model
mdl <- bdm()

# update prior for r
mdl <- updatePrior(mdl, list(par = 'r', meanlog = -1.1, sdlog = 0.1))

# update prior for logK
mdl <- updatePrior(mdl, list(par = 'logK', min = 1, max = 100))

# update prior for initial depletion
mdl <- updatePrior(mdl, list(par = 'x0', meanlog = log(0.8), sdlog = 0.01))

# check updates
getr(mdl)
getlogK(mdl)

# update using a prior class
# object
library(lhm)

# create object containing
# vector of r values
iter <- 100
mu <- 0.1
cv <- 0.2
sd <- sqrt(log(1+cv^2))
x <- rlnorm(iter,log(mu)-sd^2/2,sd)
r <- prior(x)

# update model
mdl <- updatePrior(mdl, r)

# check update
mean(log(r))
getr(mdl)[['E[log(r)]']]

}

