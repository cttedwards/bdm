% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/sr.R
\docType{methods}
\name{sr}
\alias{sr}
\alias{sr,rdat-method}
\alias{sr<-}
\alias{sr<-,rdat,list-method}
\title{Stock-recruitment function}
\usage{
sr(object, ...)

\S4method{sr}{rdat}(object)

sr(object) <- value

\S4method{sr}{rdat,list}(object) <- value
}
\arguments{
\item{object}{a \code{rdat} object}

\item{value}{a \code{list} containing the components \code{type}, \code{mu} and \code{cv}
\describe{
\item{\code{type}}{can be either \code{'BH'} or \code{'RK'} indicating the Beverton-Holt and Ricker curves respectively}
\item{\code{mu}}{a list containing the single steepness parameter \code{h} which represents the mean value}
\item{\code{cv}}{a list containing the single steepness parameter \code{h} which represents the coefficient of variation}
}}
}
\description{
This function can be used to access or assign the stock recruitment function in an \code{\link{rdat}} object.
}
\details{
When executing \code{\link{rcalc}} the recruitment functions are used to calculate the recruits per spawner, using steepness and the equilibrium spawning biomass per recruit \eqn{SBPR}. For the Beverton-Holt stock recruitment function recruits per spawner is \deqn{Recruits Per Spawner = 4h/(SBPR * (1 - h)),} and for the Ricker function it is \deqn{Recruits Per Spawner = h^1.25 / (SBPR * exp(ln(0.2)/0.8)).} To introduce uncertainty the steepness is represented as: \deqn{h_i = 0.2 + rbeta(\alpha,\beta)(h^{MAX} - 0.2)} where \eqn{h^{MAX}=1} for the Beverton-Holt function and \eqn{h^{MAX}\approx 165} for the Ricker function. The \eqn{\alpha} and \eqn{\beta} parameters of the \eqn{Beta} distribution are found using a numerical search algorithm to give mean and uncertainty values approximately equal to those input.
}
\examples{
# single iteration
dat <- rdat(amax = 30,iter=1)
sr(dat) <- list(type='BH',mu=0.75)
sr(dat)

# multiple stochastic iterations
dat <- rdat(amax = 30, iter = 10)
sr(dat) <- list(type='BH', mu=0.75, cv=0.1)
sr(dat)

# alpha and beta parameters are returned
# as invisible objects for diagnostic plots
.alpha
.beta
}

