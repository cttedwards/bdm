%\VignetteIndexEntry{bdm}
%\VignetteEngine{knitr::knitr}
%\VignetteKeyword{R,bdm}


\documentclass{article}

\usepackage{geometry}
\usepackage{natbib}
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{mathtools}
\usepackage{parskip}
\usepackage{fixltx2e}
\usepackage[font=footnotesize,labelfont=bf,width=0.9\linewidth]{caption}

\setlength\parindent{0pt}
\setlength{\parskip}{3mm}
\linespread{1.05}

\newcommand{\bmsy}{B\textsubscript{MSY}}
\newcommand{\bmey}{B\textsubscript{MEY}}
\newcommand\btar{B\textsubscript{TAR}}
\newcommand\blim{B\textsubscript{LIM}}
\newcommand\fmsy{F\textsubscript{MSY}}
\newcommand\fmey{F\textsubscript{MEY}}
\newcommand\ftar{F\textsubscript{TAR}}
\newcommand\flim{F\textsubscript{LIM}}
\newcommand\fmax{F\textsubscript{MAX}}
\newcommand\fcur{F\textsubscript{CUR}}
\newcommand\umsy{U\textsubscript{MSY}}

\newcommand{\R}{{\sffamily{\textbf{R}}}}
\newcommand{\bdm}{{\sffamily{\textbf{bdm}}}}
\newcommand{\rstan}{{\sffamily{\textbf{rstan}}}}
\newcommand{\code}[1]{{\ttfamily{#1}}}


\title{
  Bayesian biomass dynamic model for fisheries stock assessment
  }
\author{
	Charles T T Edwards\\ \small{NIWA Ltd., Wellington, NZ}\\ \textit{charles.edwards@niwa.co.nz}
	}
\date{June 2014}

<<include=FALSE>>=
library(knitr)
library(ggplot2)
library(bdm)
opts_chunk$set(fig.path='fig/bdm-',
               fig.align='center',
               size='footnotesize',
               fig.width=12,
               fig.height=6,
               out.width='0.8\\textwidth',
               tidy=TRUE,
               tidy.opts=list(keep.blank.line=TRUE, width.cutoff=80),
               message=FALSE,
               warning=FALSE)
@

\begin{document}

\maketitle

\section{Brief introduction to biomass dynamic models}

Biomass dynamic models in fisheries have a long history of application. Because fisheries data are generally collected over discrete timesteps, the models themselves are also usually written in discrete form, with a production function $g(B_t)$, which combines recrutiment, growth and natural mortality elements of the dynamics, written in terms of the current depletion $x_t$ relative to the biomass at unexploited equilibrium $K$. 
\begin{equation}
x_{t+1}=x_t+g(x_t)-H_t       	
\end{equation}
where $H_t = C_t/K$ is the harvest rate. This type of model was first applied within a fisheries context by Schaefer \cite{Schaefer:1954,Schaefer:1957}, who implemented a logistic production function. 
\begin{equation}
g(x_t)=rx_t\left(1-x_t\right)  	
\end{equation}
This has two estimable parameters, usually referred to as the intrinsic rate of population growth $r$ and the carrying capacity $K$. The logistic model has a number of useful reference points associated with it, which can be obtained directly from parameter estimates. These correspond to a maximum sustainable yield $MSY = rK/4$ and the associated biomass $B^{MSY}=K/2$ and harvest rate $H^{MSY}=r/2$. If we define the ratio $\phi = B^{MSY}/K = x^{MSY}$, then the logistic model specifically assumes that $\phi = 0.5$. However this is usually inconsistent with predictions made by age structured models, which are based on a stock-recruitment function that often predicts $\phi < 0.5$. It is therefore desirable to implement a biomass dynamic model that has reference points consistent with an age-structured analogue. The logistic model was first genearlised by Pella and Tomlinson \cite{Pella:1969} to allow $\phi \neq 0.5K$ by introducing a shape parameter $p$, and was subsequently re-paramaterised by Fletcher \cite{Fletcher:1978} in terms of the shape parameter $n$ and $m=MSY$. However, both formulations of this genearlised production model have the anomalous property of predicting excessively high per capita production at low biomass levels. For the logistic model, the parameter $r$ is consistent with the definition of intrinsic growth as defined in ecological theory \cite{Krebs:1986}, as the maximum rate of increase as the biomass converges on zero (equation \ref{equ:rdef}). However, for the Pella-Tomlinson-Fletcher model this is not the case. 
\begin{equation}
r = \lim_{b \to 0} \frac{1}{b}\frac{db}{dt} \label{equ:rdef}
\end{equation}
Two alternative solutions have been proposed to rectify this problem. A combined Fletcher-Schaefer hybrid model was derived by McAllister \cite{McAllister:2000} to allow $\phi < 0.5$. It has a discontinuous inflection point at $x^{MSY}$ with dynamics for values of $x<x^{MSY}$ governed by the logistic (Schaefer) model, and dynamics at higher biomass levels governed by the genearlised (Fletcher) production model. This has the notable advantage of an ecologically consistent interpretation of $r$. 
\begin{equation}
g(x_{t}) =
\begin{dcases}
r.x_{t}.\left(1 - \frac{x_{t}}{2\phi}\right) &\text{if } x \leq \phi\\
\gamma.m.\left(x_t - x_t^{n}\right) &\text{if } x > \phi
\end{dcases} \label{equ:mdl}
\end{equation} 
\begin{subequations}
\begin{equation}
\phi = \left(\frac{1}{n}\right)^{(1/(n-1))}
\end{equation}
\begin{equation}
\gamma=\frac{n^{n/(n-1)}}{n-1}
\end{equation}
\begin{equation}
m = \frac{r\phi}{4}
\end{equation}
\end{subequations}
An alternative model that utilises a Beverton-Holt production function was proposed by Mangel et al. \cite{Mangel:2010} (equation \ref{equ:bh}). 
\begin{equation}
g(B_{t}) = \frac{\alpha.B_{t}}{1 + \beta.B_{t}} - M.B_{t} \label{equ:bh}
\end{equation}
This model is parameterised by $M$ and $\phi<0.5$. Given these two inputs $\alpha$ can be estimated numerically as the solution to the relationship in equation \ref{equ:bhphi}, and the $\beta$ parameter is then obtained from equation \ref{equ:bhbeta}.
\begin{subequations}
\begin{equation}
\phi=\frac{\sqrt{\frac{\alpha}{M}}-1}{\frac{\alpha}{M}-1} \label{equ:bhphi}
\end{equation}
\begin{equation}
\beta = \frac{1}{K}\left(\frac{\alpha}{M}-1\right) \label{equ:bhbeta}
\end{equation}
\end{subequations}
This model predicts a similar replacement yield to the Fletcher-Schaefer hybrid model across a range of $\phi$ values. However the productivity per unit biomass is a different shape, being higher at low biomass levels. This difference becomes even more exagerated at lower $\phi$ values. 

It is informative to compare all potentially useful models at $\phi=0.4$ (figures \ref{fig:productionfunctions} and \ref{fig:intrinsicgrowth}). The Fletcher model notably exagerates the productivity at low biomass levels. The Fletcher-Schaefer hybrid model and Beverton-Holt model are similar, but only the former includes a term that can be interpreted as the intrinsic growth. This is an important consideration, since it is possible to develope informative priors for $r$ which can greatly facilitate parameter estimation \cite{McAllister:2001}. The Fletcher-Schaefer model is therefore preferred here, and implemented in the \bdm~ package.

<<include=FALSE,cache=TRUE>>=
r <- 0.1
K <- 100
b <- seq(0,K,1e-3)
rlim <- function(b) dbdt(b) * (1/b)

# empty dataframe
dfr <- data.frame() 

# Schaefer model
#dbdt <- function(b) r * b * (1 - b/K)
#dfr <- rbind(dfr,data.frame(biomass=b,
#                  production=dbdt(b),
#                  growth=rlim(b),
#                  model='Schaefer'))
# P-T model
#dbdt <- function(b) r/p * b * (1 - (b/K)^p)
#p <- 0.2
#dfr <- rbind(dfr,data.frame(biomass=b,
#                            production=dbdt(b),
#                            growth=rlim(b),
#                            model='Pella-Tomlinson'))

# fletcher model
dbdt <- function(b) g * m * b/K * (1 - (b/K)^(n-1))
n <- 1.1881
bmsy <- (1/n)^(1/(n-1)) * K
h <- 2*bmsy
m <- r*h/4
g <- (n^(n/(n-1)))/(n-1)
dfr <- rbind(dfr,data.frame(biomass=b,
                            production=dbdt(b),
                            growth=rlim(b),
                            model='Fletcher'))

# Fletcher-Schaefer model
dbdt <- function(b) {
  bf <- b[which(b>bmsy)]
  bs <- b[which(b<=bmsy)]
  c(r * bs * (1 - bs/h),g * m * bf/K * (1 - (bf/K)^(n-1)))
}
dfr <- rbind(dfr,data.frame(biomass=b,
                            production=dbdt(b),
                            growth=rlim(b),
                            model='Fletcher-Schaefer'))
# Beverton-Holt model
dbdt <- function(b) alpha * b / (1 + beta * b) - M * b
phi <- 0.4
M <- 0.1
objective <- function(alpha) phi - (sqrt(alpha/M)-1)/((alpha/M)-1)
alpha <- uniroot(objective,interval=c(0,10))$root
beta  <- 1/K * (alpha/M - 1) 
dfr <- rbind(dfr,data.frame(biomass=b,
                            production=dbdt(b),
                            growth=rlim(b),
                            model='Beverton-Holt'))
@

<<productionfunctions,echo=FALSE,fig.cap='Production functions for different models assuming $\\phi=0.4$'>>=
ggplot(dfr) + geom_line(aes(x=biomass,y=production,col=model)) + labs(x='Biomass',y='Surplus Production',col='Model')
@

<<intrinsicgrowth,echo=FALSE,fig.cap='Growth rate per capita as a function of biomass'>>=
ggplot(dfr) + geom_line(aes(x=biomass,y=growth,col=model)) + labs(x='Biomass',y='Production per unit biomass',col='Model')
@

\section{The \bdm~package}
The package fits a state space biomass dynamic model using Bayesian methods, specifically the Hamiltonian MCMC implemented in the package \rstan. To a large extent, the package is an external wrapper for \rstan, providing functionality relevant to the intended application. The package is generalisable, meaning that any number of model formulations can be specified by the user. The default implements the Fletcher-Schaefer hybrid model mentioned above, with $\phi$ specified as an input value. As a default, $\phi=0.5$ (i.e. $n=2$), making it equivalent to the logistic model.   

\subsection{Estimation framework}
Parameters are estimated within a Bayesian state-space framework. This re-formulates the process equation to include a time-dependent error term (the process error, $\epsilon^p$) and a parallel observation process that relates an abundance index $I$ to the unobserved biomass state with some degree of error (the observation error, $\epsilon^o$), according to an estimated catchability scalar $q$. 
\begin{subequations}
\begin{equation}
x_{t+1}=\left[x_t+g(x_t)-H_t\right].\epsilon_t^p 
\end{equation}
\begin{equation}
I_{it}=[q_i x_t].\epsilon_{it}^o  
\end{equation}
\end{subequations}
The advantage of this class of models is that they allow both process and observation error to be represented simultaneously, which is important for effective precautionary or risk based management \cite{Harwood:2003}. 

Parameters to be estimated in the model are therefore: $r$, $K$, $q$ for each index, and the error terms. The large number of parameters necessitates a Bayesian approach with appropriate priors. Parametric distributional assumptions for $\epsilon^p$ and $\epsilon^o$ are required, which unfortunately cannot be estimated in an hierarchical manner with fisheries data. We assume them to follow a log-normal distribution with an expectation of one, and therefore fix values of $\sigma_p$ and $\sigma_o$ on input, based on a subjective measure of model fit to the data, with minimum bounds $\sigma_p \geq 0.05$ and $\sigma_o \geq 0.15$.
\begin{subequations}
\begin{equation}
r \sim LN(\mu_r,\sigma_r^2)  
\end{equation}
\begin{equation}
ln(K) \sim U(.,.) 
\end{equation}
\begin{equation}
\epsilon_{.}^p \sim LN(-\sigma_p^2/2,\sigma_p^2 ) 
\end{equation}
\begin{equation}
\epsilon_{..}^o \sim LN(-\sigma_o^2/2,\sigma_o^2)				      	
\end{equation}
\end{subequations}
The $r$ and $K$ parameters of the logistic model are highly correlated, and their estimation is helped through the use of an informative prior or priors. We assumed an uninformative log-uniform prior for $K$, but an informative log-normal prior for $r$. The expectation and variance for the prior on intrinsic growth, with $E[r]=\exp(\mu_r+\sigma_r^2/2)$ can be constructed from available life-history data using the function \code{bdm::rcalc}, which implements methods described by McAllister et al. \cite{McAllister:2001}.

Log-normal prior distributions for the error terms are specified to have an expection of one, which gives an intuitive interpretation of the expected quantities.
\begin{subequations}
\begin{equation}
E[x_{t+1}]=x_t+g(x_t)-H_t
\end{equation}
\begin{equation}
E[I_{it}]=q_i x_t  
\end{equation}
\end{subequations}
The catchability $q$ is estimated analytically from its maximum posterior density estimate assuming an uninformatinve uniform prior (i.e. $q \sim U(.,.)$).
\begin{equation}
\hat{q}_i = \exp{\left[\frac{1}{n_t}\sum_t{\left\{ln(I_{it})-ln(B_t)\right\}} + \frac{\sigma_o^2}{2}\right]}
\end{equation}
If we assume that the biomass is exactly known for purposes of the estimation of $\hat{q}$, then $E[ln(B_t)] = ln(B_t)$. Since $E[ln(I_{it})] = ln(q_i.B_t)-\sigma_o^2/2$, then $E[ln(\hat{q}_{i})] = E[ln(q_i)]$ and $E[\hat{q}_{i}] = E[q_i]$ as required.
\begin{align}
E[ln(\hat{q}_i)] &= \left[\frac{1}{n_t}\sum{\left\{E[ln(I_{it})]-E[ln(B_t)]\right\}} + \frac{\sigma_o^2}{2}\right] \nonumber \\
&= \left[\frac{1}{n_t}\sum{\left\{ln(q_i.B_t)-\frac{\sigma_o^2}{2}-ln(B_t)\right\}} + \frac{\sigma_o^2}{2}\right] \nonumber \\
&=ln(q_i)
\end{align}

<<include=FALSE,cache=TRUE>>=

nyr <- 60
nix <- 1

sigmaP  <- 0.05
sigmaP2 <- sigmaP^2

sigmaO  <- 0.2
sigmaO2 <- sigmaO^2

harvest_rate <- 0.3*sin(seq(0.01,pi/1.2,length=nyr))

r <- exp(-1.0 + 0.20^2/2)
K <- exp(10)

biomass <- numeric(nyr)
biomass_deviate <- rlnorm(nyr,log(1)-sigmaP2/2,sigmaP)

catch <- numeric(nyr)

biomass[1] <- K * biomass_deviate[1]
catch[1] <- biomass[1] * harvest_rate[1]
for(t in 2:nyr) {
  biomass[t] <- (biomass[t-1] + r * biomass[t-1] * (1 - biomass[t-1]/K) - catch[t-1]) * biomass_deviate[t-1]
  catch[t] <- biomass[t] * harvest_rate[t]
}

q <- 1e-4

index <- matrix(-1,nyr,nix)
index <- apply(index,2,function(x) rlnorm(length(x),log(q*biomass)-sigmaO2/2,sigmaO))

dat <- edat(harvest=catch,index=index,time=1:nyr)
sigmao(dat) <- sigmaO
sigmap(dat) <- sigmaP
@

<<include=FALSE,results='hide'>>=
mdl <- bdm(compile=TRUE)
@

<<echo=FALSE,results='hide'>>=
dat.null <- dat
dat.null$index[] <- -1
mdl.null <- fit(mdl,dat.null,iter=10000,chains=1)
@

<<null,echo=FALSE,fig.cap='Posterior samples from null model run. Prior distributions are shown in red.'>>=
par(mfrow=c(1,2))
hist(mdl.null@trace$r,prob=TRUE,yaxt='n',ylab='',xlab='',main='r')
curve(dlnorm(x,-1,0.2),add=TRUE,lty=1,col='red',lwd=2)
hist(mdl.null@trace$logK,prob=TRUE,yaxt='n',ylab='',xlab='',main='ln(K)')
curve(dunif(x,3,30),add=TRUE,lty=1,col='red',lwd=2)
@

<<echo=FALSE,results='hide',cache=TRUE>>=
xmin <- mdl.null@trace$x
dat.null$harvest[] <- 0
mdl.null <- fit(mdl,dat.null,init=list(r=r,logK=log(K),x=rep(0.5,dat.null$T)),iter=10000,chains=1)
xmax <- mdl.null@trace$x
@

\subsection{Model verification}

The purposes of verification are to check that the model has been formulated and coded correctly. This was achieved using the following steps.

\begin{enumerate}
\item Prior specifications were first checked by running the model with no data (the null model). Correspondence between in the input priors and the model output confirmed that they had been specified correctly (figure \ref{fig:null}).
\item The range of possible biomass values with and without catches, was checked by running the null model and found to be $x=[\Sexpr{round(range(xmin,xmax),2)}]$.
\item A simple simulation self-test was used to check ability of the model to estimate parameters given an informative dataset. A sample data set was simulated from the default model with $r=\Sexpr{round(r,2)}$, $ln(K)=\Sexpr{log(K)}$, $\sigma_p=\Sexpr{sigmaP}$ and $\sigma_o=\Sexpr{sigmaO}$, over $\Sexpr{nyr}$ units of time. The model was then fitted to the simulated data using the same $\sigma_p$ and $\sigma_o$ values. Posterior distributions of $r$, $ln(K)$ and $q$ are shown in figure \ref{fig:estimates}, relative to the input values. Fits to the data are shown in figure \ref{fig:fits}. 
\item The distributions of $ln(\epsilon_o)$ and $ln(\epsilon_p)$ were then checked to validate their conformity to the model assumptions. Specifically, if the model is coded correctly we would expect them to be normally distributed, with mean expectations of $E[ln(\epsilon_p)] = -\sigma_p^2/2$ and $E[ln(\epsilon_o)]=-\sigma_o^2/2$. The variance terms will be $VAR[ln(\epsilon_p)] = \sigma_p^2$ and $VAR[ln(\epsilon_o)]= \sigma_o^2+\sigma_p^2$. In the latter case the observation error variance is greater than that used in the simulation. This is because values of $\epsilon_p$ estimated by the model will not be an exact match to the true (simulated) values. The residual error is therefore a combination of error introduced by the observation process and the difference between estimated dynamics and the true biomass values (i.e. the total error). The output distributions correspond well to these anticipated results (figures \ref{fig:obs_err} and \ref{fig:proc_err}).
\item Finally, depletion estimates produced by the model are given in figure \ref{fig:simbiomass}. 
\end{enumerate}

Notably, the estimation of paramater values is particularly poor (figure \ref{fig:estimates}), leading to a poor reproduction of the underlieing biomass dynamics (figure \ref{fig:simbiomass}). However, fit to the data is good (figure \ref{fig:fits}). The reason for this apparent discrepancy is the high degree of correlation between the parameters $r$ and $ln(K)$, with multiple value combinations producing an equally probable fit to the data. This can be seen in the posterior samples (figure \ref{fig:rkcorrelation}). Notably however, estimation of the depletion is more reliable, giving an almost exact representation of the input dynamics figure (\ref{fig:simbiomass}). 

<<echo=FALSE,results='hide',cache=TRUE>>=
mdl <- fit(mdl,dat,iter=5000)
@

<<estimates,echo=FALSE,fig.cap='Posterior distributions of $r$ and $ln(K)$ with 90\\% credibility intervals. Values used to simulate the data are shown in red'>>=
par(mfrow=c(1,3))
hist(mdl@trace$r,prob=TRUE,yaxt='n',ylab='',xlab='',main='r')
abline(v=r,col='red',lwd=2)
abline(v=c(quantile(mdl@trace$r,0.05),quantile(mdl@trace$r,0.95)),lty=2)
hist(mdl@trace$logK,prob=TRUE,yaxt='n',ylab='',xlab='',main='ln(K)')
abline(v=log(K),col='red',lwd=2)
abline(v=c(quantile(mdl@trace$logK,0.05),quantile(mdl@trace$logK,0.95)),lty=2)
hist(mdl@trace$q,prob=TRUE,yaxt='n',ylab='',xlab='',main='q')
abline(v=q*K,col='red',lwd=2)
abline(v=c(quantile(mdl@trace$q,0.05),quantile(mdl@trace$q,0.95)),lty=2)
@

<<fits,echo=FALSE,fig.cap='Predicted abundance index plotted against observed values. Boxes indicate 90\\% confidence intervals for observation and process error, assuming a log-normal distibution with scale parameters $\\sigma_o$ and $\\sigma_p$.'>>=
xmed <- apply(mdl@trace$observed_index,2,median)
xlow <- qlnorm(0.05,log(xmed)-sigmaO2/2,sigmaO)
xupp <- qlnorm(0.95,log(xmed)-sigmaO2/2,sigmaO)

ymed <- apply(mdl@trace$predicted_index,2,median)
ylow <- qlnorm(0.05,log(ymed)-sigmaP2/2,sigmaP)
yupp <- qlnorm(0.95,log(ymed)-sigmaP2/2,sigmaP)

par(mfrow=c(1,2))
plot(xmed,pch=19,ylab='Observed and Predicted Indices',xlab='Time')
lines(ymed,lwd=2,col='blue')

plot(xmed,ymed,ylim=range(0,ylow,yupp),xlim=range(0,xlow,xupp),pch=19,col=2,ylab='Predicted',xlab='Observed')
segments(xlow,ylow,xlow,yupp,col=2)
segments(xupp,ylow,xupp,yupp,col=2)
segments(xlow,yupp,xupp,yupp,col=2)
segments(xlow,ylow,xupp,ylow,col=2)
abline(0,1,lty=2)
@

<<proc_err,echo=FALSE,fig.cap='Distribution of process error residuals $ln(\\epsilon_p)$.'>>=
par(mfrow=c(1,2))
hist(log(mdl@trace$epsilon_p),prob=TRUE,yaxt='n',ylab='',xlab='residual',main='Fitted Normal')
mtext('expected residual distribution',col='red')
curve(dnorm(x,-sigmaP2/2,sigmaP),add=TRUE,lty=1,col='red',lwd=2)
curve(dnorm(x,mean(log(mdl@trace$epsilon_p)),sd(log(mdl@trace$epsilon_p))),add=TRUE,lty=2)
qqnorm(log(mdl@trace$epsilon_p))
qqline(log(mdl@trace$epsilon_p),lty=2)
@

<<obs_err,echo=FALSE,fig.cap='Distribution of observation error residuals $ln(\\epsilon_o)$'>>=
par(mfrow=c(1,2))
hist(log(mdl@trace$epsilon_o),prob=TRUE,yaxt='n',ylab='',xlab='residual',main='Fitted Normal')
mtext('expected residual distribution',col='red')
curve(dnorm(x,-sigmaO2/2,sqrt(sigmaO2 + sigmaP2)),add=TRUE,lty=1,col='red',lwd=2)
curve(dnorm(x,mean(log(mdl@trace$epsilon_o)),sd(log(mdl@trace$epsilon_o))),add=TRUE,lty=2)
qqnorm(log(mdl@trace$epsilon_o))
qqline(log(mdl@trace$epsilon_o),lty=2)
@

<<simbiomass,echo=FALSE,fig.cap='Predicted biomass and depletion distributions over time. Simulated dynamics used to generate the data are shown in red.'>>=
par(mfrow=c(1,2))
boxplot(mdl@trace$biomass,outline=F,xlab='Time',ylab='',main='Biomass')
lines(biomass,col='red',lwd=2)
boxplot(sweep(mdl@trace$biomass,1,exp(mdl@trace$logK),'/'),outline=F,xlab='Time',ylab='',main='Depletion')
lines(biomass/K,col='red',lwd=2)
@

<<rkcorrelation,echo=FALSE,fig.cap='Posterior samples from parameters $r$ and $ln(K)$ with associated log-posterior (lp) probabilities.'>>=
dfr <- melt(mdl@trace$r,value.name='r')
dfr <- data.frame(dfr,lnK=melt(mdl@trace$logK)$value,lp=melt(mdl@trace$lp__)$value)
pairs(~r+lnK+lp,dfr)
@


\subsection{Sensitivity testing}

The verification process demonstrates that the model is coded correctly and able to form the estimation procedure for which it was intended. However this does not necessarily mean that the estimation itself is particularly accurate, especially given known correlations between the parameters $r$ and $K$. It is nevertheless informative to test it using a range of initialisation values. This at least gives an indication of the reliability of the estimator in finding an apparent best fit to the data. 

The \bdm~package uses a grid search to find approximate starting values for the estimator, with some error then introduced to initialise each chain. To better test the sensitivity, a new initial value function is coded, which samples $r = (0,2]$ and $ln(K) = (3,30]$ from an orthogonal grid. Ten chains were initialised in this way and the traces plotted to check convergence (figure \ref{fig:converge}). It is clear that the chains converge quickly from a range of initial values. This is encouraging, although by no means an indication that this will always be the case.

<<converge,warning=FALSE,message=FALSE,results='hide',fig.cap='Convergence of model estimation.',cache=TRUE>>=
init.func <- function() {
  logK <- runif(1,4,29)
  r    <- runif(1,0.01,1.9)
  x    <- runif(60,0.1,0.9)
  
  list(logK=logK,r=r,x=x)
}
mdl <- fit(mdl,dat,init=init.func,chains=10)
traceplot(mdl)
@

%The model was also run under a range of $\sigma_p=\{0.01,0.05,0.10\}$ and $\sigma_o=\{0.01,0.10,0.20,0.30\}$ values. When fitted to the above simulated data, the posterior estimates of current depletion are shown in .

\section{Model evaluation}

Evaluation of a model represents an assessment of model utility within the context for which it was designed. The evaluation presented here refers to utility of the \bdm~package. To do this, it is applied to a real data set. Ability of the package to produce an estimate of biomass depletion is thus demonstrated. 

The model is fitted to data from the chatham rise hake fishery in New Zealand, which consists of catches, a commerical abundance index and a survey index (figure \ref{fig:hakcrdata}). 

\subsection{Development of a prior for $r$}
Life history data are available, allowing us to populate an object of the \code{rdat} class. Monte-carlo samples are generated, and application of the \code{rcalc} function to this class of object calcuates values of $r$ for each iteration, producing an object of the \code{rprior} class. Finally, there is a \code{fit} function used to parameterise a log-normal distribution, and thereby to create an informative prior for the intrinsic growth rate (figure \ref{fig:hakrprior}). The estimated parameter values can be found in \code{object@lognormal.par}.

<<hakcrdata,echo=FALSE,fig.cap='Chatham rise hake data'>>=
# load data
data(hakcr)
dat <- edat(harvest=hakcr$catch,index=cbind(hakcr$survey,hakcr$cpue),time=rownames(hakcr))

dat.tmp <- dat
dat.tmp$index <- apply(dat.tmp$index,2,function(x) {x[x<0] <- NA; x})

par(mar=c(5,5,1,5))
barplot(dat.tmp$harvest,names.arg=dat.tmp$time,ylim=range(0,dat.tmp$harvest*1.1),ylab='Catch (tonnes)',xlab='Year',cex.lab=2)
par(new=TRUE); plot(dat.tmp$index[,1]~dat.tmp$time,col=1,ylim=range(0,dat.tmp$index,na.rm=T),type='b',xaxt='n',yaxt='n',ylab='',xlab='',pch=19,lwd=2)
if(ncol(dat.tmp$index)>1) for(i in 2:ncol(dat.tmp$index)) lines(dat.tmp$index[,i]~dat.tmp$time,col=i,type='b',pch=19,lwd=2)
axis(4,)
mtext('Abundance',4,line=3,cex=2)
@

<<hakrprior,cache=TRUE,fig.cap='Prior for $r$ generated from life-history data for chatham rise hake.',message=FALSE>>=
# initialise lh data object for calculation of r with uncertainty
lhdat <- rdat(amax=100,iter=1e3)

# then life-history vectors can be assigned to each iteration
# with or without uncertainty
nmort(lhdat)    <- list(mu=0.18)
maturity(lhdat) <- c(0.0,0.01,0.02,0.06,0.14,0.28,0.50,0.72,0.86,0.94,0.98,0.99,1.00)
size(lhdat)     <- list(mu=list(Linf=106.5,k=0.229,t0=0.01))
mass(lhdat)     <- list(mu=list(a=1.88e-9,b=3.305))
sr(lhdat)       <- list(type='BH',mu=0.90,cv=0.10)

# calculate r prior and fit log-normal distribution
r <- fit(rcalc(lhdat))
@

Following initialisation of the model, it can be parameterised directly using the \code{update\_bdm} function, which takes as input the \code{bdm} and \code{rprior} objects. This function updates the model code directly, following which it must be compiled.

<<results='hide'>>=
mdl <- bdm()
mdl <- update_bdm(mdl,r,compile=TRUE)
mdl <- fit(mdl,dat,iter=5000,thin=10)
@

\subsection{Estimation of depletion}
The model was run for 5000 iterations, sampling every 10, using the \code{fit} function. Convergence of the chains is illustrated in figures \ref{fig:haktrace} and \ref{fig:hakhist}. Fits to the abundance indices are shown in figure \ref{fig:datfit}.

<<haktrace,fig.cap='Traceplots for chatham rise hake fit.'>>=
traceplot(mdl)
@
<<hakhist,fig.cap='Posterior histograms for chatham rise hake fit.'>>=
histplot(mdl,par=c('r','logK','q'))
@

<<datfit,echo=FALSE,results="hide",fig.cap='Observed and predicted abundance indices'>>=
dfro <- mdl@trace$observed_index
dimnames(dfro) <- list(iter=1:dim(dfro)[1],year=dat$year,fleet=c('Survey','CPUE'))

dfrp <- mdl@trace$predicted_index
dimnames(dfrp) <- list(iter=1:dim(dfrp)[1],year=dat$year,fleet=c('Survey','CPUE'))

dfro <- melt(dfro)
dfro <- subset(dfro,iter==1)
dfro$value[dfro$value==0] <- NA

dfrp <- melt(dfrp)

ggplot() + stat_summary(data=dfrp,aes(x=year,y=value),fun.y=function(x) median(x),geom='line',lwd=1.1) + geom_point(data=dfro,aes(x=year,y=value),size=2) + facet_wrap(~fleet) + theme(axis.text=element_text(size=15),axis.title=element_text(size=20),legend.title=element_text(size=15),legend.text=element_text(size=15)) + labs(x='Year',y='Predicted Value')
@




\subsection{Diagnostics}

%\subsection{ggmcmc}
%\section{Projections}






\bibliographystyle{unsrt}
\bibliography{bdm}


\end{document}